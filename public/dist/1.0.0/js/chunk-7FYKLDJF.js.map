{
  "version": 3,
  "sources": ["../../../../node_modules/@azizka/i18n/src/utils.js", "../../../../node_modules/@azizka/i18n/src/translator.js", "../../../../node_modules/@azizka/i18n/index.js", "../../../../node_modules/@azizka/router/src/utils.js", "../../../../node_modules/@azizka/router/src/router.js", "../../../../node_modules/@azizka/router/src/route-navigator.js", "../../../../node_modules/@azizka/router/src/mocks/location-mock.js", "../../../../node_modules/@azizka/router/src/mocks/history-mock.js", "../../../../node_modules/@azizka/router/index.js", "../../../../src/client/data/user.ts", "../../../../src/globals.ts", "../../../../src/client/globals.ts", "../../../../src/client/helpers.ts"],
  "sourcesContent": ["function isObject(obj) {\r\n  const type = typeof obj;\r\n\r\n  return type === 'function' ||\r\n    (type === 'object' && !!obj);\r\n}\r\n\r\nmodule.exports = {\r\n  isObject\r\n};\r\n", "const { isObject } = require('./utils');\r\n\r\nclass Translator {\r\n  data;\r\n  globalContext;\r\n\r\n  extension;\r\n\r\n  constructor() {\r\n    this.resetContext();\r\n  }\r\n\r\n  static create(data) {\r\n    const translator = new Translator();\r\n\r\n    translator.add(data);\r\n\r\n    return translator;\r\n  }\r\n\r\n  translate(text, defaultNumOrFormatting, numOrFormattingOrContext, formattingOrContext) {\r\n    let num = undefined;\r\n    let formatting = undefined;\r\n    let context = this.globalContext;\r\n\r\n    if(isObject(defaultNumOrFormatting)) {\r\n      formatting = defaultNumOrFormatting;\r\n\r\n      if(isObject(numOrFormattingOrContext)) {\r\n        context = numOrFormattingOrContext;\r\n      }\r\n    } else if(typeof defaultNumOrFormatting === 'number') {\r\n      num = defaultNumOrFormatting;\r\n      formatting = numOrFormattingOrContext;\r\n\r\n      if(formattingOrContext) {\r\n        context = formattingOrContext;\r\n      }\r\n    } else {\r\n      if(typeof numOrFormattingOrContext === 'number') {\r\n        num = numOrFormattingOrContext;\r\n        formatting = formattingOrContext;\r\n      } else {\r\n        formatting = numOrFormattingOrContext;\r\n        \r\n        if(formattingOrContext) {\r\n          context = formattingOrContext;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.translateText(text, num, formatting, context);\r\n  }\r\n\r\n  add(data) {\r\n    if(!this.data) {\r\n      this.data = data;\r\n    } else {\r\n      if(data.values && this.data.values) {\r\n        for(const key of Object.keys(data.values)) {\r\n          this.data.values[key] = data.values[key];\r\n        }\r\n      }\r\n  \r\n      if(data.contexts && this.data.contexts) {\r\n        for(const context of data.contexts) {\r\n          this.data.contexts.push(context);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setContext(key, value) {\r\n    his.globalContext[key] = value;\r\n  }\r\n\r\n  extend(extension) {\r\n    this.extension = extension;\r\n  }\r\n\r\n  clearContext(key) {\r\n    delete this.globalContext[key];\r\n  }\r\n\r\n  reset() {\r\n    this.resetData();\r\n    this.resetContext();\r\n  }\r\n\r\n  resetData() {\r\n    this.data = {\r\n      values: {},\r\n      contexts: []\r\n    };\r\n  }\r\n\r\n  resetContext() {\r\n    this.globalContext = {};\r\n  }\r\n\r\n  translateText(text, num, formatting, context) {\r\n    context = context || this.globalContext;\r\n\r\n    if(!this.data) {\r\n      return this.useOriginalText('' + text, num, formatting);\r\n    }\r\n\r\n    const contextData = this.getContextData(this.data, context);\r\n\r\n    let result = null;\r\n\r\n    if(contextData) {\r\n      result = this.findTranslation(text, num, formatting, contextData?.values);\r\n    }\r\n\r\n    if(result === null) {\r\n      result = this.findTranslation(text, num, formatting, this.data.values);\r\n    } \r\n\r\n    if(result === null)  {\r\n      result = this.useOriginalText('' + text, num, formatting);\r\n    }\r\n\r\n    return result;  \r\n  }\r\n\r\n  findTranslation(text, num, formatting, data) {\r\n    let value = data?.[text];\r\n\r\n    if(value === undefined) {\r\n      return null;\r\n    }\r\n\r\n    if(typeof value === 'object' && !Array.isArray(value)) {\r\n      if(this.extension) {\r\n        value = '' + this.extension(text, num, formatting, value);\r\n        value = this.applyNumbers(value, num || 0);\r\n\r\n        return this.applyFormatting(value, formatting);\r\n      } else {\r\n        return this.useOriginalText('' + text, num, formatting);\r\n      }\r\n    }  \r\n\r\n    if(num === undefined && typeof value === 'string') {\r\n      return this.applyFormatting(value, formatting);\r\n    } else if(value instanceof Array) {               \r\n      for(const triple of value) {\r\n        if(\r\n          num === undefined && triple[0] === null && triple[1] === null || \r\n          num !== undefined && (\r\n            triple[0] !== null && num >= triple[0] && (triple[1] === null || num <= triple[1]) || \r\n            triple[0] === null && triple[1] && num <= triple[1]\r\n          )\r\n        ) {\r\n          const numVal = num || 0;\r\n          const textVal = '' + (triple[2] ?? '');          \r\n\r\n          const result = this.applyNumbers(textVal, numVal);\r\n\r\n          return this.applyFormatting(result, formatting);\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  applyNumbers(str, num) {\r\n    str = str.replace('-%n', '' + -num);\r\n    str = str.replace('%n', '' + num);\r\n\r\n    return str;\r\n  }\r\n\r\n  applyFormatting(text, formatting) {\r\n    if(formatting) {\r\n      for(const key of Object.keys(formatting)) {\r\n        const regex = new RegExp(`%{${key}}`, 'g');\r\n        text = text.replace(regex, formatting[key]);\r\n      }\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  getContextData(data, context) {\r\n    if(!data.contexts) {\r\n      return null;\r\n    }\r\n\r\n    for(const ctx of data.contexts) {\r\n      let equal = true;\r\n\r\n      for(const key of Object.keys(ctx.matches)) {\r\n        const value = ctx.matches[key];\r\n\r\n        equal = equal && value === context[key];\r\n\r\n        if(!equal) break;\r\n      }\r\n\r\n      if(equal) {\r\n        return ctx;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  useOriginalText(text, num, formatting) {\r\n    if(num === undefined) {\r\n      return this.applyFormatting(text, formatting);\r\n    }\r\n\r\n    return this.applyFormatting(text.replace('%n', '' + num), formatting);\r\n  }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  Translator\r\n};\r\n", "const { Translator } = require('./src/translator');\r\n\r\nconst { isObject } = require('./src/utils');\r\n\r\nmodule.exports = {\r\n  Translator,\r\n  isObject\r\n};\r\n", "function trimSlashes(path) {\n  return path.replace(/\\/$/, '').replace(/^\\//, '');\n}\n\nfunction transformURL(url, currentPath, root) {\n  const newUrl = url.trim();\n  const splits = newUrl.split('?');\n\n  let path = splits[0].trim();\n  const query = splits[1]?.trim();\n\n  if(!path) {\n    path = currentPath;\n  } else {\n    if(root !== '/') {\n      path = path.replace(root, '');\n    }\n\n    path = trimSlashes(path);\n  }\n\n  if(!query) {\n    return path;\n  }\n\n  return `${path}?${query}`;\n}\n\nfunction parseQuery(query) {\n  const data = {};\n\n  let search = query;\n\n  if(query[0] === '?') {\n    search = query.substring(1);\n  }\n\n  search.split('&').forEach(row => {\n    const parts = row.split('=');\n\n    if(parts[0] !== '') {\n      const key = decodeURIComponent(parts[0]);\n      const value = parts[1] === undefined ? '1' : parts[1];\n\n      data[key] = value;\n    }\n  });\n\n  return data;    \n}\n\nfunction parseRouteRule(route) {\n  if(typeof route === 'string') {\n    const uri = trimSlashes(route);\n\n    const rule = uri\n      .replace(/([\\\\\\/\\-\\_\\.])/g, '\\\\$1')\n      .replace(/\\{[a-zA-Z]+\\}/g, '(:any)')\n      .replace(/\\:any/g, '[\\\\w\\\\-\\\\_\\\\.]+')\n      .replace(/\\:word/g, '[a-zA-Z]+')\n      .replace(/\\:num/g, '\\\\d+');\n\n    return new RegExp(`^${rule}$`, 'i');\n  }\n\n  return route;\n}\n\nmodule.exports = {\n  trimSlashes,\n  transformURL,\n  parseQuery,\n  parseRouteRule\n};\n", "const { trimSlashes, parseRouteRule } = require('./utils');\n\nclass Router {\n  routes = [];\n  root = '/';\n  before;\n  page404;\n\n  constructor(options) {\n    this.before = options?.before;\n    this.page404 = options?.page404;\n\n    if(options?.root) {\n      this.root = options.root === '/' ? '/' : `/${trimSlashes(options.root)}/`;\n    }\n\n    if(options?.routes) {\n      this.addRoutes(options.routes);\n    }\n  }\n\n  get rootPath() {\n    return this.root;\n  }\n\n  addRoutes(routes) {\n    for(const route of routes) {\n      this.add(route.rule, route.handler, route.options);\n    }\n  }\n\n  add(rule, handler, options) {\n    this.routes.push({\n      rule: parseRouteRule(rule),\n      handler,\n      options\n    });\n\n    return this;\n  }\n\n  remove(param) {\n    this.routes.some((route, i) => {\n      if(route.handler === param || route.rule === parseRouteRule(param)) {\n        this.routes.splice(i, 1);\n\n        return true;\n      }\n\n      return false;\n    });\n    \n    return this;\n  } \n\n  findRoute(currentPath) {    \n    for(const route of this.routes) {\n      const match = currentPath.match(route.rule);\n\n      if(match) {\n        return {\n          match,\n          route\n        };\n      }\n    }\n  }\n\n  async processUrl(currentPath, currentQuery, state) {\n    const doBreak = await this.before?.({\n      fragment: currentPath,\n      query: currentQuery,\n      state\n    });\n\n    if(!doBreak) {\n      const found = this.findRoute(currentPath);\n\n      if(!found) {\n        await this.page404?.({\n          fragment: currentPath,\n          query: currentQuery,\n          state\n        });\n      } else {\n        found.match.shift();\n\n        const page = {\n          fragment: currentPath,\n          query: currentQuery,\n          match: found.match,\n          options: found.route.options,\n          state\n        };\n\n        await found.route.handler?.(page);\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  Router\n};\n", "const { transformURL, trimSlashes, parseQuery } = require('./utils');\n\nclass RouteNavigator {\n  router;\n  popStateHandler;\n\n  constructor(router) {\n    this.router = router;\n\n    this.popStateHandler = () => {\n      router.processUrl(this.fragment, this.query, history.state);\n    };\n  }\n\n  get fragment() {\n    let value = decodeURI(location.pathname);\n  \n    if(this.router.rootPath !== '/') {\n      value = value.replace(this.router.rootPath, '');\n    }\n  \n    return trimSlashes(value);\n  }\n\n  get query() {\n    return parseQuery(location.search);\n  }\n\n  async redirectTo(url, state) {\n    const newUrl = transformURL(url, this.fragment, this.router.rootPath);  \n\n    history.replaceState(state, '', this.router.rootPath + newUrl);\n\n    const currentPath = this.fragment;\n    const currentQuery = this.query;\n    \n    await this.router.processUrl(currentPath, currentQuery, state);\n  }\n\n  async navigateTo(url, state) {\n    const newUrl = transformURL(url, this.fragment, this.router.rootPath);  \n    \n    history.pushState(state, '', this.router.rootPath + newUrl);\n\n    const currentPath = this.fragment;\n    const currentQuery = this.query;\n    \n    await this.router.processUrl(currentPath, currentQuery, state);\n  }\n\n  refresh() {\n    return this.redirectTo(this.fragment + location.search, history.state);\n  } \n\n  addUriListener() {\n    window.addEventListener('popstate', this.popStateHandler);\n  }\n\n  removeUriListener() {\n    window.removeEventListener('popstate', this.popStateHandler);\n  }\n}\n\nmodule.exports = {\n  RouteNavigator\n};\n", "class LocationMock {\n  pathname = '';\n  search = '';\n}\n\nmodule.exports = {\n  LocationMock\n};\n", "class HistoryMock {\n  location;\n\n  constructor(location) { \n    this.location = location;\n  }\n\n  replaceState(state, data, path) {\n    this.changeLocation(path);\n  }\n\n  pushState(state, data, path) {\n    this.changeLocation(path);\n  }\n\n  changeLocation(path) {\n    let splits = path?.split?.('?');\n\n    if(splits) {\n      this.location.pathname = splits[0];\n\n      if(splits.length > 1) {\n        this.location.search = '?' + splits[1];\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  HistoryMock\n};\n", "const { Router } = require('./src/router');\n\nconst { RouteNavigator } = require('./src/route-navigator');\n\nconst { trimSlashes, transformURL, parseQuery, parseRouteRule } = require('./src/utils');\n\nconst { LocationMock } = require('./src/mocks/location-mock');\nconst { HistoryMock } = require('./src/mocks/history-mock');\n\nmodule.exports = {\n  Router,\n\n  RouteNavigator,\n\n  trimSlashes,\n  transformURL,\n  parseQuery,\n  parseRouteRule,\n\n  LocationMock,\n  HistoryMock\n};\n", "export const UserActionSetInfo = 'user-set-info';\r\n", "export const PAGE_ROOT = '/';\r\n\r\nexport const LANGUAGES = {\r\n  kz: { \r\n    image: '/images/flags/kz.svg',\r\n    label: '\u049A\u0430\u0437\u0430\u049B\u0448\u0430'\r\n  },\r\n  ru: { \r\n    image: '/images/flags/ru.svg',\r\n    label: '\u0420\u0443\u0441\u0441\u043A\u0438\u0439'\r\n  },\r\n  en: { \r\n    image: '/images/flags/en.svg',\r\n    label: 'English'\r\n  }\r\n};\r\n\r\nexport const DEFAULT_LANGUAGE = 'kz';\r\n", "import { FormattingContext, Translator } from '@azizka/i18n';\r\nimport { Router, RouteNavigator, Page } from '@azizka/router';\r\n\r\nimport { RouteOptions } from './data/route-options';\r\nimport { RouteState } from './data/route-state';\r\n\r\nimport { View } from './views/view';\r\nimport { BaseLayout } from './views/layouts/base-layout';\r\n\r\nimport { PAGE_ROOT } from '../globals';\r\n\r\nexport const router = new Router<RouteOptions, RouteState>({ root: PAGE_ROOT });\r\nexport const routeNavigator = new RouteNavigator<RouteOptions, RouteState>(router);\r\n\r\nexport const views: {\r\n  [key: string]: View\r\n} = {};\r\n\r\nexport const layouts: {\r\n  [key: string]: BaseLayout & View\r\n} = {};\r\n\r\nexport const languages: {\r\n  [key: string]: Translator\r\n} = {};\r\n\r\nexport interface GlobalContext {\r\n  tr: (\r\n    text: string | number, \r\n    defaultNumOrFormatting?: number | FormattingContext, \r\n    numOrFormattingOrContext?: number | FormattingContext,\r\n    formattingOrContext?: FormattingContext    \r\n  ) => string;\r\n}\r\n\r\nconst translator = new Translator();\r\n\r\nexport const context: GlobalContext = {   \r\n  tr: translator.translate.bind(translator)\r\n};\r\n", "import { UserActionSetInfo } from './data/user';\r\n\r\nimport { routeNavigator, layouts as globalLayouts } from \"./globals\";\r\nimport { DEFAULT_LANGUAGE } from '../globals';\r\n\r\nexport async function sleep(ms?: number) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport async function navigateHandler(event: Event, elem: HTMLElement) {\r\n  event.preventDefault();\r\n\r\n  const path = elem.getAttribute?.('href');\r\n\r\n  if(path) {\r\n    await routeNavigator.navigateTo(path);\r\n  }\r\n}\r\n\r\nexport async function loadContent(\r\n  parent: HTMLElement | null, \r\n  firstTime: boolean, \r\n  layouts: string[]\r\n): Promise<HTMLElement> {\r\n  let content: HTMLElement;\r\n\r\n  if(firstTime || parent) {\r\n    content = parent || document.body;\r\n  } else {\r\n    let path = location.pathname + '?ajax=1&init=1&time=' + Date.now();\r\n\r\n    const layoutsToLoad = [];\r\n\r\n    for(let layout of layouts) {\r\n      if(!(layout in globalLayouts)) {\r\n        layoutsToLoad.push(layout);\r\n      }\r\n    }\r\n\r\n    if(layoutsToLoad.length > 0) {\r\n      path += '&layouts=' + layoutsToLoad.join(',');\r\n    }\r\n\r\n    const html = await (await fetch(path)).text();\r\n    \r\n    content = document.createElement('div');\r\n\r\n    content.innerHTML = html;\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nexport async function mount(elem: HTMLElement | null) {\r\n  if(elem) {\r\n    await sleep(10);\r\n\r\n    elem.classList.remove('page-unmount');\r\n  }\r\n}\r\n\r\nexport async function unmount(elem: HTMLElement | null) {\r\n  if(elem) {\r\n    elem.classList.add('page-unmount');\r\n\r\n    await sleep(250);\r\n  }\r\n}\r\n\r\nexport function signOut(redirect?: string) {\r\n  globalLayouts['main-layout']?.performAction?.(UserActionSetInfo, null);\r\n\r\n  fetch('/auth/sign-out?ajax=1');\r\n\r\n  if(redirect) {\r\n    routeNavigator.redirectTo(redirect);\r\n  } else {\r\n    routeNavigator.redirectTo('/');\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
